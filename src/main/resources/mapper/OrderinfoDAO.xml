<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.jxufe.mapper.OrderinfoDAO">
  <resultMap id="BaseResultMap" type="cn.edu.jxufe.entity.Orderinfo">
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="buyer_id" jdbcType="INTEGER" property="buyerId" />
    <result column="buyer_name" jdbcType="VARCHAR" property="buyerName" />
    <result column="buyer_tel" jdbcType="VARCHAR" property="buyerTel" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="payment_code" jdbcType="CHAR" property="paymentCode" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="finnshed_time" jdbcType="TIMESTAMP" property="finnshedTime" />
    <result column="order_amount" jdbcType="BIGINT" property="orderAmount" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_sn, buyer_id, buyer_name, buyer_tel, add_time, payment_code, payment_time, 
    finnshed_time, order_amount, order_state, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="cn.edu.jxufe.entity.OrderinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.edu.jxufe.entity.OrderinfoExample">
    delete from orderinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.jxufe.entity.Orderinfo">
    insert into orderinfo (order_id, order_sn, buyer_id, 
      buyer_name, buyer_tel, add_time, 
      payment_code, payment_time, finnshed_time, 
      order_amount, order_state, created_time, 
      updated_time)
    values (#{orderId,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, #{buyerId,jdbcType=INTEGER}, 
      #{buyerName,jdbcType=VARCHAR}, #{buyerTel,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{paymentCode,jdbcType=CHAR}, #{paymentTime,jdbcType=TIMESTAMP}, #{finnshedTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=BIGINT}, #{orderState,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.jxufe.entity.Orderinfo">
    insert into orderinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="buyerName != null">
        buyer_name,
      </if>
      <if test="buyerTel != null">
        buyer_tel,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="paymentCode != null">
        payment_code,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="finnshedTime != null">
        finnshed_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="buyerName != null">
        #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="buyerTel != null">
        #{buyerTel,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=CHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finnshedTime != null">
        #{finnshedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=BIGINT},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.jxufe.entity.OrderinfoExample" resultType="java.lang.Long">
    select count(*) from orderinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderinfo
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerId != null">
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerName != null">
        buyer_name = #{record.buyerName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerTel != null">
        buyer_tel = #{record.buyerTel,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentCode != null">
        payment_code = #{record.paymentCode,jdbcType=CHAR},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finnshedTime != null">
        finnshed_time = #{record.finnshedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=BIGINT},
      </if>
      <if test="record.orderState != null">
        order_state = #{record.orderState,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderinfo
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      buyer_name = #{record.buyerName,jdbcType=VARCHAR},
      buyer_tel = #{record.buyerTel,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      payment_code = #{record.paymentCode,jdbcType=CHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      finnshed_time = #{record.finnshedTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=BIGINT},
      order_state = #{record.orderState,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>